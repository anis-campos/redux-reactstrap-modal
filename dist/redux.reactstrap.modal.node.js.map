{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"normalizr\"","webpack:///external \"seamless-immutable\"","webpack:///external \"react\"","webpack:///external \"reactstrap\"","webpack:///./src/constants.js","webpack:///./src/actions.js","webpack:///./src/redux-reactstrap-modal.js","webpack:///./src/schemas.js","webpack:///./src/reducer.js","webpack:///./src/index.js"],"names":["OPEN_DIALOG","CLOSE_DIALOG","TOGGLE_DIALOG","openDialog","name","data","undefined","type","c","dialog","open","toggleDialog","closeDialog","reduxReactstrapModal","connect","settings","mapStateToProps","state","dialogReducer","dialogs","modal","isOpen","mapDispatchToProps","dispatch","toggle","ModalContent","ReduxReactstrapModal","props","dialogSchema","schema","Entity","idAttribute","initialState","Immutable","action","normalized","normalize","entities","isImmutable","merge","deep","actions","updateIn"],"mappings":"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","file":"redux.reactstrap.modal.node.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","module.exports = require(\"normalizr\");","module.exports = require(\"seamless-immutable\");","module.exports = require(\"react\");","module.exports = require(\"reactstrap\");","/**\n * Open action\n * @type {string}\n */\nexport const OPEN_DIALOG = 'OPEN_DIALOG';\n/**\n * Close action\n * @type {string}\n */\nexport const CLOSE_DIALOG = 'CLOSE_DIALOG';\n/**\n * Toggle action\n * @type {string}\n */\nexport const TOGGLE_DIALOG = 'TOGGLE_DIALOG';\n","import * as c from \"./constants\";\n\n/**\n * Open a modal\n * @param {string} name Name of the modal to open\n * @param {Object} [data] Data to send to the modal\n * @return {{dialog: {data: *, name: *, open: boolean}, type: string}}\n */\nexport function openDialog(name, data = undefined) {\n    return {\n        type: c.OPEN_DIALOG,\n        dialog: {\n            name: name,\n            open: true,\n            data: data\n        }\n    };\n}\n\n\n/**\n * Toggle a modal\n * @param name Name of the modal to toggle\n * @return {{dialog: {name: string}, type: string}}\n */\nexport const toggleDialog = (name) => {\n    return {\n        type: c.TOGGLE_DIALOG,\n        dialog: {\n            name: name,\n        }\n    };\n};\n\n/**\n * Close a modal\n * @param {string} name Name of the modal to close\n * @return {{dialog: {name: string, open: boolean}, type: string}}\n */\nexport function closeDialog(name) {\n    return {\n        type: c.CLOSE_DIALOG,\n        dialog: {\n            name: name,\n            open: false\n        }\n    };\n}\n\n\n\n","import {Modal} from \"reactstrap\";\nimport {toggleDialog} from \"./actions\";\nimport React from \"react\";\n\n/**\n * HOC function that connects {Modal} to {redux}.\n * @param {function} connect: react-redux connect. Prevents de \" Could not find store\" error\n * @param settings: settings to apply to the {Modal} object see {@link https://reactstrap.github.io/components/modals/}. \"name\" is required.\n * @returns {function(*): function(*): *} Connected modal\n */\nconst reduxReactstrapModal = (connect, settings) => {\n\n    const {name} = settings;\n\n    const mapStateToProps = (state) => {\n        if (state.dialogReducer.dialogs !== undefined && state.dialogReducer.dialogs[name] !== undefined) {\n            const modal = state.dialogReducer.dialogs[name];\n            const isOpen = modal.open;\n            const data = modal.data;\n            return {isOpen, data};\n        }\n\n        //default state\n        return {isOpen: false, data: {}};\n    };\n\n    const mapDispatchToProps = (dispatch) => ({\n        toggle: () => {\n            dispatch(toggleDialog(name));\n        }\n    });\n\n\n\n    return (ModalContent) => {\n\n        const ReduxReactstrapModal = (props) => {\n            return (\n                <Modal {...settings} {...props}>\n                    <ModalContent {...props}  />\n                </Modal>\n            );\n        };\n\n        return connect(mapStateToProps, mapDispatchToProps)(ReduxReactstrapModal);\n\n\n    };\n};\n\n\nexport default reduxReactstrapModal;\n","import { schema} from \"normalizr\";\n\n\nexport const dialogSchema = new schema.Entity('dialogs', undefined, {idAttribute: 'name'});\n\n","import * as actions from \"./constants\";\nimport Immutable from \"seamless-immutable\";\nimport {normalize} from \"normalizr\";\nimport {dialogSchema} from './schemas';\n\n\nconst initialState = Immutable({\n    dialogs: {}\n});\n\n/**\n * Create dialogs state reducer\n * @param state\n * @param action\n * @return {{dialogs}|*}\n */\nexport default (state = initialState, action) => {\n\n    const normalized = normalize(action, {\n        dialog: dialogSchema\n    }).entities;\n\n    //Fix error when initial state is not immutable\n    if (!Immutable.isImmutable(state))\n        state = Immutable(state);\n\n    //Fix wrong initial state\n    if (!state.dialogs)\n        state = state.merge(initialState, {deep: true});\n\n    switch (action.type) {\n        case actions.OPEN_DIALOG:\n            return state.merge(normalized, {deep: true});\n\n\n        case actions.CLOSE_DIALOG:\n            return state.merge(normalized, {deep: true});\n\n\n        case actions.TOGGLE_DIALOG:\n            return state.updateIn([\"dialogs\", action.dialog.name, \"open\"], (open) => !open);\n\n        default:\n            return state;\n    }\n};\n","import reduxReactstrapModal from './redux-reactstrap-modal';\nimport dialogReducer from './reducer';\nimport {openDialog, closeDialog} from './actions';\n\nexport default reduxReactstrapModal;\nexport {dialogReducer, openDialog, closeDialog};\n"],"sourceRoot":""}